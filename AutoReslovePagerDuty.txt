import json
import os
from time import sleep
import pdpyras
import json
import http.client as pager
from datetime import datetime
import requests
import pycountry
from dateutil.parser import parse
#session = pdpyras.APISession('610683d180d44e09c0d1aa66ba22ae32')
def getDetailsTask1(taskID):
    url = "https://api.btaskee.com/api/v3/api-tasker-vn/get-task-detail"
    payload = json.dumps({
    "taskId": taskID,
    "userId": "cdTh3MRr58vEPRB6k"
    })
    headers = {
    'accept': 'application/json, text/plain, */*',
    'accesskey': 'yIYrgUWxCqYThtE1YclRhnmKlvyYvlZE',
    'content-type': 'application/json',
    'user-agent': 'okhttp/4.9.2'
    }
    response = requests.request("POST", url, headers=headers, data=payload)
    if(response.status_code == 200):
        return json.loads(response.text)
    else:
        pass
def pagerDutyHuyDon(thongTinDon):
    dt_object = datetime.strptime(thongTinDon["created_at"], '%Y-%m-%dT%H:%M:%S%z')
    conn = pager.http.client.HTTPSConnection("events.pagerduty.com")
    tentieude = thongTinDon["summary"] + "Khách hủy đơn này"
    data1 = thongTinDon["body"]["details"]
    payload = """{"payload":{"summary":\""""+tentieude+"""\","severity":"critical","source":"Client","timestamp":\""""+dt_object.isoformat()+"""\","custom_details":"""+json.dumps(data1,ensure_ascii=False)+"""},"routing_key":"610683d180d44e09c0d1aa66ba22ae32","event_action":"trigger\"}"""
    conn.request("POST", "/v2/enqueue", payload.encode('utf-8'))
    res = conn.getresponse()
    info=res.read()
    #print(payload)
def getNational(name):
    try:
        url = "https://v2.namsor.com/NamSorAPIv2/api2/json/countryBatch"
        payload = {
        "personalNames": [
            {
            "name": name
            }
        ]
        }
        headers = {
            "X-API-KEY": "59db60683c685763b28aa342d70a83df",
            "Accept": "application/json",
            "Content-Type": "application/json"
        }
        response = requests.request("POST", url, json=payload, headers=headers)
        result = json.loads(response.text)
        quocgia = pycountry.countries.get(alpha_2=result["personalNames"][0]["country"])
        tenquocgia = quocgia.name
        return tenquocgia
    except:
        return "Không biết"
def pagerDuty(taskID):
    thongTinDon = getDetailsTask1(taskID)
    if thongTinDon != None:
        doigiolam = False
        listResolved = []
        # Check Trung Don
        # Get all incidents
        session = pdpyras.APISession('u+APm6HyXdztzDX-xomw',default_from="kwj85910@eoopy.com")
        incidents = session.list_all(
            'incidents',
            params={'user_ids[]':['PPQK4XC'],'statuses[]':['triggered']}
        )
        for x in incidents:
            url = "/incidents/" + x["id"] + "/alerts"
            a = session.get(url=url)
            b = json.loads(a.text)
            if taskID == b["alerts"][0]["body"]["details"]["id"]:
                listResolved.append(x)
                doigiolam = True
                pdated_incidents = session.rput('incidents',json=listResolved)

        dt_object = datetime.strptime(thongTinDon["date"], '%Y-%m-%dT%H:%M:%S%z')
        if thongTinDon["serviceId"] != "A4BieMZxbrtKeb6WEx1":
            conn = pager.http.client.HTTPSConnection("events.pagerduty.com")
            data1={}
            data1["id"] = taskID
            data1["Nhân viên nhận đơn"]=thongTinDon["acceptedTasker"][0]["name"]
            data1["Địa điểm"]=thongTinDon["description"] + thongTinDon["address"]
            data1["Giá tiền"]=str(+thongTinDon["cost"])+"VND"
            data1["Giá promotion"] = str(+thongTinDon["promotion"])+"VND"
            data1["Loại nhà"]=thongTinDon["homeType"]["vi"]
            try:
                data1["Ghi Chú"] = thongTinDon["note"]
            except:
                pass
            data1["Tên khách"]=thongTinDon["contactName"]
            data1["ID Khách"] = thongTinDon["askerId"]
            data1["Quốc gia"] = getNational(thongTinDon["contactName"])
            data1["STD khách"]=thongTinDon["phone"]
            data1["Hình thức thanh toán"]=thongTinDon["paymentMethod"]
            date_obj = datetime.strptime(thongTinDon["date"], '%Y-%m-%dT%H:%M:%S%z')
            data1["Giờ làm việc"]=date_obj.strftime("%d-%b-%Y (%H:%M)")
            try:
                ban_do=f"""https://www.google.com/maps/place/{thongTinDon["lat"]},{thongTinDon["lng"]}"""
            except:
                ban_do="Khong co ban do"
            strSofa=""
            if "sofa" in thongTinDon["detail"]:
                for x in thongTinDon["detail"]["sofa"]:
                    if "typeSofa" in x:
                        for y in x["typeSofa"]:
                            strSofa+=y["text"]["vi"] + ": Số lượng: "+str(y["quantity"])+" ,"
                    else:
                        for y in x["stool"]:
                            strSofa+=y["text"]["vi"] + ": Số lượng: "+str(y["quantity"])+" ,"
                data1["Sofa"] = strSofa
            strNem=""
            if "mattress" in thongTinDon["detail"]:
                for x in thongTinDon["detail"]["mattress"]:
                    strNem+=x["text"]["vi"] + ": Số lượng: "+str(x["quantity"])+" ,"
                data1["Nệm"] = strNem
            strRem=""
            if "curtain" in thongTinDon["detail"]:
                if "dryclean" in thongTinDon["detail"]["curtain"]:
                    for x in thongTinDon["detail"]["curtain"]["dryclean"]:
                        strRem+=x["text"]["vi"] + ": Số lượng: "+str(x["quantity"])+" ,"
                if "washing" in thongTinDon["detail"]["curtain"]:
                    for x in thongTinDon["detail"]["curtain"]["washing"]:
                        if "vi" in x:
                            strRem+="Giặt nước: "+x["text"]["vi"] +" ,"
                        else:
                            strRem+="Giặt nước: "+x["text"]["en"] +" ,"
                data1["Rèm"] = strRem
            strTham=""
            if "carpet" in thongTinDon["detail"]:
                for x in thongTinDon["detail"]["carpet"]:
                    strTham+=x["text"]["vi"] + ": Số lượng: "+str(x["quantity"])+" ,"
                data1["Thảm"] = strTham
            tentieude = ""
            if doigiolam:
                tentieude = "Có đơn sofa mới ở " + thongTinDon["taskPlace"]["district"] + ", " + date_obj.strftime("%d-%b-%Y (%H:%M)") + " Đổi giờ làm"
            else:
                tentieude = "Có đơn sofa mới ở " + thongTinDon["taskPlace"]["district"] + ", " + date_obj.strftime("%d-%b-%Y (%H:%M)")
            payload = """{"payload":{"summary":\""""+tentieude+"""\","severity":"critical","source":"Client","timestamp":\""""+dt_object.isoformat()+"""\","custom_details":"""+json.dumps(data1)+"""},"routing_key":"610683d180d44e09c0d1aa66ba22ae32","event_action":"trigger\""""
            payload+=""","links": [{"href": \""""+ban_do+"""\","text": "Click đây để xem bản đồ"}]}"""
            conn.request("POST", "/v2/enqueue", payload.encode('utf-8'))
            res = conn.getresponse()
            info=res.read()
            #print(payload)
        else:
            conn = pager.http.client.HTTPSConnection("events.pagerduty.com")
            data1={}
            data1["id"] = taskID
            data1["Nhân viên nhận đơn"]=thongTinDon["acceptedTasker"][0]["name"]
            data1["Địa điểm"]=thongTinDon["description"] + thongTinDon["address"]
            data1["Giá tiền"]=str(+thongTinDon["cost"])+"VND"
            data1["Giá promotion"] = str(+thongTinDon["promotion"])+"VND"
            data1["Loại nhà"]=thongTinDon["homeType"]["vi"]
            try:
                data1["Ghi Chú"] = thongTinDon["note"]
            except:
                pass
            data1["Tên khách"]=thongTinDon["contactName"]
            data1["ID Khách"] = thongTinDon["askerId"]
            data1["Quốc gia"] = getNational(thongTinDon["contactName"])
            data1["STD khách"]=thongTinDon["phone"]
            data1["Hình thức thanh toán"]=thongTinDon["paymentMethod"]
            date_obj = datetime.strptime(thongTinDon["date"], '%Y-%m-%dT%H:%M:%S%z')
            data1["Giờ làm việc"]=date_obj.strftime("%d-%b-%Y (%H:%M)")
            ban_do=f"""https://www.google.com/maps/place/{thongTinDon["lat"]},{thongTinDon["lng"]}"""
            if "customArea" in json.dumps(thongTinDon):
                data1["Khử khuẩn"] = thongTinDon["detail"]["spaceText"]["vi"] + " diện tích "+ str(thongTinDon["detail"]["customArea"])
            elif "option2" in json.dumps(thongTinDon) or "option3" in json.dumps(thongTinDon):
                data1["Khử khuẩn"] = thongTinDon["detail"]["area"]["name"] + " từ "+ str(thongTinDon["detail"]["area"]["from"]) +" đến " + str(thongTinDon["detail"]["area"]["to"])
            elif "option1" in json.dumps(thongTinDon) or "option3" in json.dumps(thongTinDon):
                data1["Khử khuẩn"] = thongTinDon["detail"]["area"]["name"] + " từ "+ str(thongTinDon["detail"]["area"]["from"]) +" đến " + str(thongTinDon["detail"]["area"]["to"])
            else:
                data1["Khử khuẩn"] = thongTinDon["detail"]["spaceText"]["vi"] + " từ "+ str(thongTinDon["detail"]["area"]["from"]) +" đến " + str(thongTinDon["detail"]["area"]["to"])
            tentieude = ""
            if doigiolam:
                tentieude = "Có đơn khử khuẩn mới ở " + thongTinDon["taskPlace"]["district"] + ", " + date_obj.strftime("%d-%b-%Y (%H:%M)") + " Đổi giờ làm"
            else:
                tentieude = "Có đơn khử khuẩn mới ở " + thongTinDon["taskPlace"]["district"] + ", " + date_obj.strftime("%d-%b-%Y (%H:%M)")
            payload = """{"payload":{"summary":\""""+tentieude+"""\","severity":"critical","source":"Client","timestamp":\""""+dt_object.isoformat()+"""\","custom_details":"""+json.dumps(data1)+"""},"routing_key":"610683d180d44e09c0d1aa66ba22ae32","event_action":"trigger\""""
            payload+=""","links": [{"href": \""""+ban_do+"""\","text": "Click đây để xem bản đồ"}]}"""
            conn.request("POST", "/v2/enqueue", payload.encode('utf-8'))
            res = conn.getresponse()
            info=res.read()
            #print(payload)

def getDetailsTask():
    url = " https://api.btaskee.com/api/v3/api-tasker-vn/get-confirmed-tasks"
    payload = json.dumps({
    "userId": "cdTh3MRr58vEPRB6k"
    })
    headers = {
    'accept': 'application/json, text/plain, */*',
    'accesskey': 'yIYrgUWxCqYThtE1YclRhnmKlvyYvlZE',
    'content-type': 'application/json',
    'user-agent': 'okhttp/4.9.2'
    }
    response = requests.request("POST", url, headers=headers, data=payload)
    if(response.status_code == 200):
        return json.loads(response.text)
    else:
        pass

def clearOldIncidents():
    listDonDangLam = getDetailsTask()
    session = pdpyras.APISession('u+APm6HyXdztzDX-xomw',default_from="kwj85910@eoopy.com")
    incidents = session.list_all(
        'incidents',
        params={'user_ids[]':['PPQK4XC'],'statuses[]':['triggered']}
    )
    listincidents = []
    for y in incidents:
        url = "/incidents/" + y["id"] + "/alerts"
        a = session.get(url=url)
        b = json.loads(a.text)
        listincidents.append({"b":b,"incident":y})
    listResolved = []
    
    for x in listDonDangLam:
        status = False
        for b in listincidents:
            if "Mất đơn, vô kiểm tra ngay" in json.dumps(b,ensure_ascii=False):
                continue
            if x["_id"] == b["b"]["alerts"][0]["body"]["details"]["id"]:
                status = True
        if not status:
            pagerDuty(x["_id"])
    tempList=[]
    for item in listincidents:
        b=item["b"]
        incident = item["incident"]
        if b["alerts"][0]["body"]["details"]["id"] not in tempList:
            tempList.append(b["alerts"][0]["body"]["details"]["id"])
        else:
            incident["status"] = 'resolved'
            listResolved.append(incident)
        if "Mất đơn, vô kiểm tra ngay" in json.dumps(b,ensure_ascii=False):
                incident["status"] = 'resolved'
                listResolved.append(incident)
                continue
        status = False
        for y in listDonDangLam:
            if y["_id"] == b["alerts"][0]["body"]["details"]["id"]:
                status = True
                continue
        if status == False:
            date_string = b["alerts"][0]["body"]["details"]["Giờ làm việc"]
            date_format = '%d-%b-%Y (%H:%M)'
            date_object = datetime.strptime(date_string, date_format)
            timestamp = date_object.timestamp()
            current_time = datetime.now().timestamp()
            if"Khách hủy đơn này" in b["alerts"][0]["summary"]:
                if timestamp < current_time:
                    incident["status"] = 'resolved'
                    listResolved.append(incident)
            else:
                if timestamp > current_time:
                    time_difference = int(current_time - timestamp)
                    pagerDutyHuyDon(b["alerts"][0])
                    incident["status"] = 'resolved'
                    listResolved.append(incident)
                else:
                    incident["status"] = 'resolved'
                    listResolved.append(incident)

        # kiểm tra xem còn đơn không
        # status = False
        # for y in listDonDangLam:
        #     if "id" not in b["alerts"][0]["body"]["details"].keys():
        #         listResolved.append(x)
        #         continue
        #     if y["_id"] == b["alerts"][0]["body"]["details"]["id"]:
        #         status = True
        # if status:
        #     listResolved.append(x)
        #     continue
        
    pdated_incidents = session.rput('incidents',json=listResolved)
if __name__ == "__main__":
    while True:
        print("Clearing......")
        clearOldIncidents()
        print("Sleeping.....")
        sleep(120)